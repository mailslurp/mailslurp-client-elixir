# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule MailSlurpAPI.Model.Email do
  @moduledoc """
  Email model (also referred to as EmailDto). Represents an email that was received by an inbox. If you want the original SMTP message see the &#x60;getRawEmail&#x60; endpoint.
  """

  @derive [Poison.Encoder]
  defstruct [
    :"analysis",
    :"attachments",
    :"bcc",
    :"body",
    :"bodyMD5Hash",
    :"cc",
    :"charset",
    :"createdAt",
    :"from",
    :"headers",
    :"id",
    :"inboxId",
    :"isHTML",
    :"read",
    :"subject",
    :"to",
    :"updatedAt",
    :"userId"
  ]

  @type t :: %__MODULE__{
    :"analysis" => EmailAnalysis | nil,
    :"attachments" => [String.t] | nil,
    :"bcc" => [String.t] | nil,
    :"body" => String.t | nil,
    :"bodyMD5Hash" => String.t | nil,
    :"cc" => [String.t] | nil,
    :"charset" => String.t | nil,
    :"createdAt" => DateTime.t | nil,
    :"from" => String.t | nil,
    :"headers" => %{optional(String.t) => String.t} | nil,
    :"id" => String.t | nil,
    :"inboxId" => String.t | nil,
    :"isHTML" => boolean() | nil,
    :"read" => boolean() | nil,
    :"subject" => String.t | nil,
    :"to" => [String.t] | nil,
    :"updatedAt" => DateTime.t | nil,
    :"userId" => String.t | nil
  }
end

defimpl Poison.Decoder, for: MailSlurpAPI.Model.Email do
  import MailSlurpAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"analysis", :struct, MailSlurpAPI.Model.EmailAnalysis, options)
  end
end

