# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule MailSlurpAPI.Model.CreateInboxDto do
  @moduledoc """
  Options for creating an inbox. An inbox has a real email address that can send and receive emails. Inboxes can be permanent or expire at a given time. Inboxes are either &#x60;SMTP&#x60; or &#x60;HTTP&#x60; mailboxes. &#x60;SMTP&#x60; inboxes are processed by a mail server running at &#x60;mailslurp.mx&#x60; while &#x60;HTTP&#x60; inboxes are processed by AWS SES backed mailservers. An inbox email address is randomly assigned by default ending in either &#x60;mailslurp.com&#x60; or (if &#x60;useDomainPool&#x60; is enabled) ending in a similar domain such as &#x60;mailslurp.xyz&#x60; (selected at random). To specify an address use a custom domain: either pass the &#x60;emailAddress&#x60; options with &#x60;&lt;your-recipient&gt;@&lt;your-domain&gt;&#x60;. To create a randomized address for your domain set the &#x60;domainName&#x60; to the domain you have verified or pass the &#x60;domainId&#x60;. Virtual inboxes prevent outbound sending and instead trap mail.
  """

  @derive [Poison.Encoder]
  defstruct [
    :"emailAddress",
    :"domainName",
    :"domainId",
    :"name",
    :"description",
    :"useDomainPool",
    :"tags",
    :"expiresAt",
    :"favourite",
    :"expiresIn",
    :"allowTeamAccess",
    :"inboxType",
    :"virtualInbox",
    :"useShortAddress"
  ]

  @type t :: %__MODULE__{
    :"emailAddress" => String.t | nil,
    :"domainName" => String.t | nil,
    :"domainId" => String.t | nil,
    :"name" => String.t | nil,
    :"description" => String.t | nil,
    :"useDomainPool" => boolean() | nil,
    :"tags" => [String.t] | nil,
    :"expiresAt" => DateTime.t | nil,
    :"favourite" => boolean() | nil,
    :"expiresIn" => integer() | nil,
    :"allowTeamAccess" => boolean() | nil,
    :"inboxType" => String.t | nil,
    :"virtualInbox" => boolean() | nil,
    :"useShortAddress" => boolean() | nil
  }
end

defimpl Poison.Decoder, for: MailSlurpAPI.Model.CreateInboxDto do
  def decode(value, _options) do
    value
  end
end

